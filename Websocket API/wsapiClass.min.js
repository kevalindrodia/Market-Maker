const crypto=require("crypto"),EventEmitter=require("events"),emitter=new EventEmitter,WebSocket=require("ws");module.exports=class extends EventEmitter{constructor(e,s,t="wss://ws.xeggex.com"){super(),this._apiKey=e,this._secretKey=s,this._wssHost=t||"wss://ws.xeggex.com",this._wss=null,this._pingTimeout=null,this._wssOpened=!1,this._messageId=0,this._initWss()}waitConnect=()=>new Promise(((e,s)=>{emitter.on("connected",(()=>{e(!0)}))}));setWssHost=e=>{this._wssHost=e};login=()=>{var e=crypto.randomBytes(10).toString("hex"),s=crypto.createHmac("sha256",this._secretKey);s.update(e);var t=s.digest("hex");let r=++this._messageId,i={method:"login",params:{algo:"HS256",pKey:this._apiKey,nonce:e,signature:t},id:r};this._sendrequest(i,r).then((e=>{1==e.result&&console.log("Login Success...")}))};getasset=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"getAsset",params:{ticker:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));getassets=()=>new Promise(((e,s)=>{(async()=>{let t=++this._messageId,r={method:"getAssets",params:{},id:t};this._sendrequest(r,t).then((t=>{t.error?s(t):e(t)}))})()}));getmarket=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"getMarket",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));getmarkets=()=>new Promise(((e,s)=>{(async()=>{let t=++this._messageId,r={method:"getMarkets",params:{},id:t};this._sendrequest(r,t).then((t=>{t.error?s(t):e(t)}))})()}));getbalances=()=>new Promise(((e,s)=>{(async()=>{let t=++this._messageId,r={method:"getTradingBalance",params:{},id:t};this._sendrequest(r,t).then((t=>{t.error?s(t):e(t)}))})()}));gettrades=(e="",s=100,t=0,r=null,i=null,o=null)=>new Promise(((n,a)=>{(async()=>{let h=++this._messageId,m={method:"getTrades",params:{symbol:e,limit:s,offset:t,sort:r,from:i,till:o},id:h};this._sendrequest(m,h).then((e=>{e.error?a(e):n(e)}))})()}));subscribeticker=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"subscribeTicker",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));unsubscribeticker=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"unsubscribeTicker",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));subscribeorderbook=(e,s=100)=>new Promise(((t,r)=>{(async()=>{let i=++this._messageId,o={method:"subscribeOrderbook",params:{symbol:e,limit:s},id:i};this._sendrequest(o,i).then((e=>{e.error?r(e):t(e)}))})()}));unsubscribeorderbook=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"unsubscribeOrderbook",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));subscribetrades=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"subscribeTrades",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));unsubscribetrades=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"unsubscribeTrades",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));getorders=e=>new Promise(((s,t)=>{(async()=>{let r=++this._messageId,i={method:"getOrders",params:{symbol:e},id:r};this._sendrequest(i,r).then((e=>{e.error?t(e):s(e)}))})()}));subscribereports=()=>new Promise(((e,s)=>{(async()=>{let t=++this._messageId,r={method:"subscribeReports",params:{},id:t};this._sendrequest(r,t).then((t=>{t.error?s(t):e(t)}))})()}));createorder=(e,s,t,r,i="limit",o=null,n=!1)=>new Promise(((a,h)=>{(async()=>{let m=++this._messageId,d={method:"newOrder",params:{userProvidedId:o,symbol:e,side:s,type:i,price:t,quantity:r,strictValidate:n},id:m};this._sendrequest(d,m).then((e=>{e.error?h(e):a(e)}))})()}));cancelorder=(e=null,s=null)=>new Promise(((t,r)=>{(async()=>{let i=++this._messageId,o={method:"cancelOrder",params:{orderId:e,userProvidedId:s},id:i};this._sendrequest(o,i).then((e=>{e.error?r(e):t(e)}))})()}));_sendrequest=(e,s)=>new Promise(((t,r)=>{this._wss.send(JSON.stringify(e)),s?emitter.on("reply_"+s,(e=>{t(e)})):t(!0)}));_onWebSocketOpen=()=>{this._wssOpened=!0};_heartbeat=()=>{this._pingTimeout&&clearTimeout(this._pingTimeout),this._pingTimeout=setTimeout((()=>{this._wss.terminate(),this._wss=null,this._initWss()}),7e4)};_loopPing=()=>{this._keepLive&&clearTimeout(this._keepLive),this._keepLive=setTimeout((()=>{this._wss.ping((new Date).getTime()),this._loopPing()}),2e4)};_decodeBytes=e=>e.toString("utf-8");_initWss=()=>{this._wss||(this._wss=new WebSocket(this._wssHost),this._wss.on("open",(()=>{this._onWebSocketOpen(),this._loopPing(),this._apiKey&&this._secretKey&&this.login(),emitter.emit("connected")})),this._wss.on("close",(()=>{clearTimeout(this._pingTimeout)})),this._wss.on("error",(e=>{console.log("error",e)})),this._wss.on("ping",(e=>{this._heartbeat()})),this._wss.on("pong",(e=>{})),this._wss.on("message",(e=>{e=this._decodeBytes(e);let s=JSON.parse(e);s.id?emitter.emit("reply_"+s.id,s):this.emit("notification",s)})))}};